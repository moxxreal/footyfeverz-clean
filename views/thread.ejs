<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=AW-17258435147"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'AW-17258435147');
</script>
  <title><%= thread.title %></title>
  <link rel="stylesheet" href="/style.css">
  <script src="https://cdn.jsdelivr.net/npm/@joeattardi/emoji-button@4.6.2/dist/emoji-button.min.js"></script>
</head>
<body>
  <%- include('partials/_header_simple') %>
  <h1><%= thread.title %></h1>
  <p>Posted by: <strong><%= thread.user %></strong></p>
  <p class="text-gray-400 text-sm">Posted <%= thread.createdAtFormatted %></p>

  <div class="thread-content">
    <%- thread.content %>
  </div>

  <h2 style="margin-top: 40px;">Comments</h2>

  <!-- Comments Section -->
  <div id="commentsContainer" class="comments-container">
    <% if (comments.length === 0) { %>
      <p>No comments yet. Be the first!</p>
    <% } else { %>
      <% comments.forEach(function(comment) { %>
        <div class="comment-item">
          <strong><%= comment.user %></strong> says:
          <% if (comment.profile_pic) { %>
            <img src="<%= comment.profile_pic %>" alt="Profile Picture" style="width: 50px; height: 50px; border-radius: 50%; object-fit: cover;">
          <% } else { %>
            <img src="/default-avatar.png" alt="Default Avatar" style="width: 50px; height: 50px; border-radius: 50%; object-fit: cover;">
          <% } %>

          <p><%= comment.text %></p>

          <% if (comment.media) { %>
            <% if (comment.media.endsWith('.jpg') || comment.media.endsWith('.png') || comment.media.endsWith('.gif')) { %>
              <img src="<%= comment.media %>" alt="Comment Media" style="max-width: 300px;">
            <% } else { %>
              <video src="<%= comment.media %>" controls style="max-width: 300px;"></video>
            <% } %>
          <% } %>

          <div class="reactions">
            <button data-comment-id="<%= comment.id %>" onclick="reactToComment('<%= comment.id %>', 'like')">
              👍 <span id="like-<%= comment.id %>"><%= comment.like_reactions || 0 %></span>
            </button>
            <button data-comment-id="<%= comment.id %>" onclick="reactToComment('<%= comment.id %>', 'funny')">
              😂 <span id="funny-<%= comment.id %>"><%= comment.funny_reactions || 0 %></span>
            </button>
            <button data-comment-id="<%= comment.id %>" onclick="reactToComment('<%= comment.id %>', 'angry')">
              😡 <span id="angry-<%= comment.id %>"><%= comment.angry_reactions || 0 %></span>
            </button>
            <button data-comment-id="<%= comment.id %>" onclick="reactToComment('<%= comment.id %>', 'love')">
              😍 <span id="love-<%= comment.id %>"><%= comment.love_reactions || 0 %></span>
            </button>
          </div>

          <small class="text-gray-400"><%= comment.formattedTimestamp %></small>
        </div>
      <% }) %>
    <% } %>
  </div>

  <!-- Comment Form -->
  <div style="background: url('/images/frame-bg.png'); background-size: cover; padding: 30px; border-radius: 15px; margin-top: 40px;">
    <form id="commentForm" action="/thread/<%= thread.league %>/<%= thread.id %>/comment" method="POST" enctype="multipart/form-data">
      <textarea id="commentText" name="text" placeholder="Write your comment..." required
        style="width: 90%; height: 200px; font-size: 16px; padding: 10px; border-radius: 10px;"></textarea><br><br>
      <input type="file" name="media" accept="image/*,video/*"><br><br>
      <button type="submit" style="padding: 10px 20px; font-size: 18px;">Post Comment</button>
      <button type="button" id="emoji-button" style="padding: 10px 20px; font-size: 18px;">😊 Add Emoji</button>
    </form>
  </div>

  <!-- Scripts -->
  <script>
    const button = document.querySelector('#emoji-button');
    const picker = new EmojiButton();

    button.addEventListener('click', () => {
      picker.togglePicker(button);
    });

    picker.on('emoji', emoji => {
      const commentInput = document.querySelector('#commentText');
      commentInput.value += emoji;
    });

    document.getElementById('commentForm').addEventListener('submit', async function(event) {
      event.preventDefault();

      const form = event.target;
      const formData = new FormData(form);

      try {
        const response = await fetch(form.action, {
          method: 'POST',
          body: formData
        });

        if (response.ok) {
          const commentsContainer = document.getElementById('commentsContainer');
          const newComments = await fetch(window.location.href);
          const html = await newComments.text();

          const tempDiv = document.createElement('div');
          tempDiv.innerHTML = html;

          const newCommentsContainer = tempDiv.querySelector('#commentsContainer');
          if (newCommentsContainer) {
            commentsContainer.innerHTML = newCommentsContainer.innerHTML;
          }

          form.reset();
        } else {
          console.error("Failed to post comment");
        }
      } catch (error) {
        console.error("Error posting comment:", error);
      }
    });

    async function reactToComment(commentId, reactionType) {
      const reactedKey = `reacted-${commentId}`;

      if (localStorage.getItem(reactedKey)) {
        alert("You have already reacted to this comment!");
        return;
      }

      try {
        const response = await fetch(`/comment/${commentId}/react/${reactionType}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });

        if (response.ok) {
          const counter = document.getElementById(`${reactionType}-${commentId}`);
          if (counter) {
            let count = parseInt(counter.textContent, 10) || 0;
            counter.textContent = count + 1;
            counter.classList.add('bounce');
            setTimeout(() => counter.classList.remove('bounce'), 500);
          }

          localStorage.setItem(reactedKey, reactionType);

          document.querySelectorAll(`button[data-comment-id='${commentId}']`).forEach(btn => {
            btn.disabled = true;
            btn.style.opacity = '0.6';
          });

        } else {
          console.error('Failed to react');
        }
      } catch (error) {
        console.error('Error reacting:', error);
      }
    }
  </script>
</body>
</html>
