<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= teamname %> Fan Page | Footy Feverz</title>
  <link rel="stylesheet" href="/style.css" />
  <script src="https://cdn.jsdelivr.net/npm/@joeattardi/emoji-button@4.6.2/dist/emoji-button.min.js"></script>
  <style>
    .comment-image-clickable {
  width: 100%;
  max-width: 90vw;
  height: auto;
  border-radius: 12px;
  margin-top: 12px;
  cursor: zoom-in;
}
@media (min-width: 768px) {
    .comment-image-clickable {
      width: auto;         /* override the 100% */
      max-width: 300px;    /* smaller cap */
    }
    }
    @media (max-width: 767px) {
  /* Make the comments list fill nearly 100% of the viewport */
  .comments-container {
    width: 95vw !important;
    margin: 0 auto !important;
    padding: 0 8px !important;
    box-sizing: border-box;
  }

  /* And the comment form too */
  .comment-form-container {
    width: 95vw !important;
    margin: 0 auto !important;
    padding: 0 8px !important;
    box-sizing: border-box;
  }
}
@media (max-width: 767px) {
  /* Reduce the huge right padding on the form container */
  .comment-form-container {
    padding: 20px !important;    /* instead of 30px 70px 30px 40px */
    width: 95vw !important;
    margin: 0 auto !important;
    box-sizing: border-box;
  }

  /* Make the textarea respect its container‚Äôs width + padding */
  #commentText {
    width: 100% !important;
    box-sizing: border-box;      /* include its own padding in that 100% */
  }
}
    #imageModal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0,0,0,0.85);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    #modalImage {
      max-width: 95%;
      max-height: 95%;
      border-radius: 10px;
      box-shadow: 0 0 20px black;
    }

    .shake {
      animation: shake 0.4s;
    }

    @keyframes shake {
      0% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      50% { transform: translateX(5px); }
      75% { transform: translateX(-5px); }
      100% { transform: translateX(0); }
    }
  </style>
  <style>
  @media (max-width: 767px) {
    #commentForm button img,
    #commentForm label img {
      width: 140px !important;
    }

    #emoji-button {
      display: none !important;
    }
  }
</style>
</head>
<body>
  <%- include('partials/_header', {
    headerClass: 'header-simple',
    showAuthLinks: false,
    showLeagueLink: true,
    leagueSlug,
    leagueName
  }) %>
  <div style="
  width: 95%;
  max-width: 1400px;
  margin: 40px auto;
  display: flex;
  justify-content: center;
  align-items: center;
">
  <img src="<%= imagePath %>" alt="<%= teamname %> Logo" style="
    width: 100%;
    height: auto;
    display: block;
    margin: 0;
    border-radius: 20px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
  " />
</div>
<!-- üî¥ JS-triggered inline error box (hidden by default) -->
<div id="pokeErrorBox" style="
  display: none;
  background: #ffe0e0;
  color: #b30000;
  padding: 12px 20px;
  border-radius: 10px;
  margin: 20px auto;
  font-weight: bold;
  font-size: 16px;
  max-width: 600px;
  text-align: center;
"></div>
<!-- Comment Form -->
  <div class="comments-container" style="margin-top: 40px;">
    <div class="comment-form-container" style="
      background: rgba(245, 245, 245, 0.95);
      border: 4px solid transparent;
      background-image: url('/images/grass-border.png');
      background-repeat: round;
      background-size: 40px;
      border-radius: 20px;
      padding: 30px 70px 30px 40px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    ">
      <form id="commentForm" action="/team/<%= teamname %>/comment" method="POST" enctype="multipart/form-data">
        <textarea
  id="commentText"
  name="text"
  placeholder="Write your comment... tag @username to mention someone"
  style="
    width: 100%;
    height: 220px;
    font-size: 18px;
    padding: 15px;
    border-radius: 12px;
    border: 1px solid #ccc;
    background: #fff;
    resize: vertical;
    margin-bottom: 15px;
  "
></textarea>

        <input type="file" name="media" id="mediaInput" accept="image/*,video/*" style="display: none;" />
        <input type="file" name="tacticImage" id="tacticImageInput" style="display: none;" />
        <img id="mediaPreview" style="max-width: 200px; display: none; margin-top: 10px;" />
        <p id="unauthMessage" class="hidden login-warning" style="margin-top: 12px; font-size: 18px; font-weight: bold; color: #007BFF;">
  Please <span onclick="openLogin()" style="text-decoration: underline; cursor: pointer;">login</span> to post a comment.
</p>
        <div style="display: flex; flex-wrap: wrap; gap: 12px; margin-top: 10px;">
          <!-- Post Comment Button -->
          <button type="submit" id="submitBtn" class="auth-sensitive-btn comment-submit-btn" style="
            border: none;
            background: transparent;
            padding: 0;
            margin: 0;
            cursor: pointer;
          ">
            <img src="/images/post-commen.png" alt="Post Comment" style="
              width: 220px;
              height: auto;
              display: block;
              border-radius: 12px;
            " />
          </button>
          <!-- Attach File Button -->
          <label for="mediaInput" class="auth-sensitive-btn" style="
            border: none;
            background: transparent;
            padding: 0;
            margin: 0;
            cursor: pointer;
            display: inline-block;
          ">
            <img src="/images/attach-file.png" alt="Attach File" style="
              width: 220px;
              height: auto;
              display: block;
              border-radius: 12px;
            " />
          </label>
          <!-- 2) Poke Rival Button (moved here) -->
  <button type="button" id="pokeRivalBtn" style="border:none;background:transparent;padding:0;cursor:pointer;">
    <img src="/images/fight-rival.png" alt="Fight Rival" style="width:220px;border-radius:12px;" />
  </button>
          <!-- Tactical Board Button ‚Äî no auth-sensitive-btn class -->
          <button type="button" id="openTacticalBoardBtn" style="
            border: none;
            background: transparent;
            padding: 0;
            margin: 0;
            cursor: pointer;
          ">
            <img src="/images/tactical-board.png" alt="Tactical Board" style="
              width: 220px;
              height: auto;
              display: block;
              border-radius: 12px;
            " />
          </button>

          <!-- Emoji Picker Button (desktop only) -->
          <button type="button" id="emoji-button" style="
            width: 60px;
            height: 60px;
            font-size: 28px;
            border-radius: 12px;
            border: none;
            cursor: pointer;
            background: url('/images/tactical-button-bg.jpg') center/cover no-repeat;
            color: white;
            font-weight: bold;
            display: none;
          ">üòä</button>
        </div>
      </form>
    </div>
  </div>
<!-- üî• Active Rival Pokes -->
<% if (pokeThreads && pokeThreads.length > 0) { %>
  <div class="poke-rival-container" style="margin-bottom: 40px;">
    <h2 style="margin-bottom: 15px; font-size: 28px; font-weight: 700; text-align: center; color: #222;">
      üî• Active Rival Debates
    </h2>
    <% pokeThreads.forEach(poke => {
      // title-case the names
      const thisTeam  = teamname
        .replace(/-/g, ' ')
        .replace(/\b\w/g, c => c.toUpperCase());
      const pokeATeam = poke.teamA
        .replace(/-/g, ' ')
        .replace(/\b\w/g, c => c.toUpperCase());
      const pokeBTeam = poke.teamB
        .replace(/-/g, ' ')
        .replace(/\b\w/g, c => c.toUpperCase());
    %>
      <div class="poke-thread" style="
        background: linear-gradient(145deg, #ffffff, #f0f0f0);
        border-radius: 20px;
        padding: 25px 30px;
        margin-bottom: 30px;
        box-shadow: 0 8px 24px rgba(0,0,0,0.12);
        border: 1px solid #ddd;
      ">
        <div style="display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap;">
          <div style="font-size: 20px; font-weight: 600;">
            <span style="color: #333;">üèüÔ∏è</span>
            <% if (poke.teamA === teamname) { %>
              <!-- Scenario 1: THIS page team poked someone -->
              <strong><%= poke.createdBy %></strong>
              <span style="color: #888;"> poked </span>
              <strong style="color: #cc0000;"><%= pokeBTeam %></strong>
            <% } else if (poke.teamB === teamname) { %>
              <!-- Scenario 2: RIVAL poked THIS page team -->
              <strong><%= pokeATeam %></strong>
              <span style="color: #888;"> poked </span>
              <strong style="color: #cc0000;"><%= thisTeam %></strong>
            <% } %>
          </div>
          <span id="countdown-<%= poke.id %>" style="font-size: 16px; color: #ff6600; font-weight: bold; margin-top: 10px;">
            ‚è≥ ...
          </span>
        </div>

        <p style="margin: 20px 0 10px; font-size: 18px; color: #333; line-height: 1.5;"><%= poke.text %></p>

        <% if (poke.media) {
            const isVideo = poke.media.endsWith('.mp4') || poke.media.endsWith('.webm') || poke.media.endsWith('.ogg');
        %>
          <div style="margin: 10px 0;">
            <% if (isVideo) { %>
              <video src="<%= poke.media %>" controls style="width: 100%; border-radius: 10px;"></video>
            <% } else { %>
              <img src="<%= poke.media %>" alt="Poke Media" style="width: 100%; border-radius: 10px;" />
            <% } %>
          </div>
        <% } %>

        <div style="text-align: center; margin-top: 20px;">
          <a href="/poke/<%= poke.id %>" style="
            display: inline-block;
            background: linear-gradient(to bottom, #ff3c3c, #c40000);
            color: white;
            font-size: 18px;
            padding: 12px 24px;
            border-radius: 12px;
            text-decoration: none;
            font-weight: 600;
            box-shadow: 0 4px 10px rgba(0,0,0,0.15);
            transition: transform 0.2s ease, background 0.2s ease;
          " onmouseover="this.style.transform='scale(1.04)'; this.style.background='#a70000';"
             onmouseout="this.style.transform='scale(1)'; this.style.background='linear-gradient(to bottom, #ff3c3c, #c40000)';">
            Join the Rivalry ‚Üí
          </a>
        </div>
      </div>
    <% }); %>
  </div>
<% } %>


  <div id="commentsContainer" class="comments-container">
    <% if (comments.length === 0) { %>
      <p>No comments yet. Be the first!</p>
    <% } else { %>
      <% comments.forEach(comment => { %>
        <div class="comment-item">
          <div class="comment-user" style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
            <img src="<%= comment.profile_pic || '/default-avatar.png' %>" alt="Avatar" class="comment-avatar" style="width: 40px; height: 40px; border-radius: 50%; object-fit: cover;" />
            <strong><a href="/user/<%= comment.user %>"><%= comment.user %></a></strong>
          </div>

          <% if (comment.text && comment.text.trim()) { %>
  <p><%- comment.text.replace(/@(\w+)/g, '<a href="/user/$1" style="color:#007BFF;">$1</a>') %></p>
<% } %>

          <% if (comment.media) {
            const isVideo = comment.media.endsWith('.mp4') || comment.media.endsWith('.webm') || comment.media.endsWith('.ogg');
          %>
            <% if (isVideo) { %>
              <video src="<%= comment.media %>" controls style="max-width: 100%; border-radius: 10px; margin-top: 10px;"></video>
            <% } else { %>
              <img src="<%= comment.media %>" class="comment-image-clickable" />
            <% } %>
          <% } %>

          <div class="reactions">
            <button onclick="reactToComment('<%= comment.id %>', 'like')">üëç <span id="like-<%= comment.id %>"><%= comment.like_reactions || 0 %></span></button>
            <button onclick="reactToComment('<%= comment.id %>', 'funny')">üòÇ <span id="funny-<%= comment.id %>"><%= comment.funny_reactions || 0 %></span></button>
            <button onclick="reactToComment('<%= comment.id %>', 'angry')">üò° <span id="angry-<%= comment.id %>"><%= comment.angry_reactions || 0 %></span></button>
            <button onclick="reactToComment('<%= comment.id %>', 'love')">üòç <span id="love-<%= comment.id %>"><%= comment.love_reactions || 0 %></span></button>
          </div>

          <small style="color: #999;" title="<%= comment.timestamp?.toDate().toLocaleString() %>">
  <%= comment.relativeTime %>
</small>
        </div>
      <% }) %>
    <% } %>
  </div>
  <% if (totalPages > 1) { %>
  <div class="pagination" style="text-align: center; margin: 30px 0;">
    <% if (page > 1) { %>
      <a href="?sort=<%= sort %>&page=<%= page - 1 %>" style="margin-right: 10px;">&laquo; Prev</a>
    <% } %>

    <% for (let i = 1; i <= totalPages; i++) { %>
      <% if (i === page) { %>
        <span style="font-weight: bold; margin: 0 5px;"><%= i %></span>
      <% } else { %>
        <a href="?sort=<%= sort %>&page=<%= i %>" style="margin: 0 5px;"><%= i %></a>
      <% } %>
    <% } %>

    <% if (page < totalPages) { %>
      <a href="?sort=<%= sort %>&page=<%= page + 1 %>" style="margin-left: 10px;">Next &raquo;</a>
    <% } %>
  </div>
<% } %>

  <div id="imageModal" class="hidden">
    <img id="modalImage" src="" />
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script>
  document.querySelector('input[name="media"]').addEventListener('change', function () {
    const file = this.files[0];
    if (file && file.type.startsWith('image/')) {
      const url = URL.createObjectURL(file);
      const img = document.getElementById('mediaPreview');
      img.src = url;
      img.style.display = 'block';
    }
  });
  async function reactToComment(id, newType) {
  if (!isLoggedIn) {
    alert("You must be logged in to react to comments.");
    return;
  }

  const key = `reacted-${id}`;
  const previousType = localStorage.getItem(key);

  // If the same reaction was already selected, ignore it
  if (previousType === newType) {
    alert("You already chose this reaction.");
    return;
  }

  // Send request to update reaction
  const res = await fetch(`/comment/${id}/react/${newType}`, { method: 'POST' });
  if (res.ok) {
    // Decrease previous count (if any)
    if (previousType) {
      const oldSpan = document.getElementById(`${previousType}-${id}`);
      if (oldSpan && parseInt(oldSpan.textContent) > 0) {
        oldSpan.textContent = parseInt(oldSpan.textContent) - 1;
      }
    }

    // Increase new reaction count
    const newSpan = document.getElementById(`${newType}-${id}`);
    if (newSpan) {
      newSpan.textContent = parseInt(newSpan.textContent || 0) + 1;
      newSpan.classList.add('bounce');
      setTimeout(() => newSpan.classList.remove('bounce'), 500);
    }

    // Store the new reaction
    localStorage.setItem(key, newType);
  } else {
    alert("Failed to react. Try again.");
  }
}

  const isLoggedIn = <%= user ? 'true' : 'false' %>;

  function showAuthWarning(targetBtn) {
    const msg = document.getElementById('unauthMessage');
    msg.classList.remove('hidden');
    targetBtn.classList.add('shake');
    setTimeout(() => targetBtn.classList.remove('shake'), 500);
  }

  // Attach File & Post Comment button auth checks
  document.querySelectorAll('.auth-sensitive-btn').forEach(button => {
    button.addEventListener('click', function(e) {
      if (!isLoggedIn) {
        e.preventDefault();
        showAuthWarning(this);
      }
    });
  });

  // Comment form submission check
  document.getElementById('commentForm').addEventListener('submit', function(e) {
    const text = document.getElementById('commentText').value.trim();
    const media = document.querySelector('input[name="media"]').files.length > 0;
    const tactic = document.querySelector('input[name="tacticImage"]').files.length > 0;

    if (!isLoggedIn) {
      e.preventDefault();
      const btn = document.getElementById('submitBtn');
      showAuthWarning(btn);
      return;
    }

    if (!text && !media && !tactic) {
      e.preventDefault();
      alert("Please write a comment or attach media.");
    }
  });
</script>

<!-- Poke Rival Modal -->
<div id="pokeRivalModal" style="display: none; position: fixed; z-index: 9999; top: 0; left: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.9); justify-content: center; align-items: center;">
  <div style="background: white; border-radius: 20px; padding: 30px; width: 95%; max-width: 600px; position: relative;">
    <h2 style="text-align: center;">Poke a Rival Team</h2>
    <form action="/poke-rival" method="POST" enctype="multipart/form-data">
      <input type="hidden" name="teamA" value="<%= teamname %>"/>
      <label for="teamB"><strong>Select Rival Team:</strong></label>
      <select name="teamB" required style="width: 100%; margin-top: 10px; padding: 10px; border-radius: 8px; border: 1px solid #ccc;">
        <% Object.entries(teamToLeagueMap).forEach(([slug, info]) => { %>
          <% if (slug !== teamname) { %>
            <option value="<%= slug %>"><%= info.name %> ‚Äî <%= slug.replace(/-/g, ' ') %></option>
          <% } %>
        <% }); %>
      </select>

      <textarea name="text" placeholder="Write your poke..." required style="width: 100%; height: 150px; margin-top: 15px; padding: 12px; font-size: 16px; border-radius: 8px; border: 1px solid #ccc;"></textarea>

      <input type="file" name="media" accept="image/*,video/*" style="margin-top: 10px;" />

      <div style="text-align: center; margin-top: 20px;">
        <button type="submit" style="padding: 10px 20px; font-size: 16px; margin-right: 10px;">Submit</button>
        <button type="button" onclick="closePokeRivalModal()" style="padding: 10px 20px; font-size: 16px;">Cancel</button>
      </div>
    </form>
  </div>
</div>
<script>
  const pokeBtn = document.getElementById('pokeRivalBtn');
  const pokeModal = document.getElementById('pokeRivalModal');

  if (pokeBtn) {
  pokeBtn.addEventListener('click', (e) => {
    if (!isLoggedIn) {
      e.preventDefault();
      showAuthWarning(pokeBtn);
      // Optional: if you have a login modal function, trigger it here
      if (typeof openLogin === 'function') openLogin();
      return;
    }
    pokeModal.style.display = 'flex';
  });
}

  function closePokeRivalModal() {
    pokeModal.style.display = 'none';
  }
</script>
<script>
  const pokeExpiries = [
    <% pokeThreads.forEach(poke => { %>
      {
        id: "<%= poke.id %>",
        expiry: <%= poke.createdAtMillis + 4 * 60 * 60 * 1000 %>
      },
    <% }); %>
  ];

  function updateCountdowns() {
    const now = Date.now();
    pokeExpiries.forEach(p => {
      const timeLeft = p.expiry - now;
      const el = document.getElementById("countdown-" + p.id);

      if (el) {
        if (timeLeft <= 0) {
          el.innerText = "Expired";
          el.closest(".poke-thread")?.remove(); // optional: hide it immediately
        } else {
          const hours = Math.floor(timeLeft / (1000 * 60 * 60));
          const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
          const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
          el.innerText = `‚è≥ Expires in: ${hours}h ${minutes}m ${seconds}s`;
        }
      }
    });
  }

  setInterval(updateCountdowns, 1000);

function isMobileDevice() {
  return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}

document.getElementById('openTacticalBoardBtn').addEventListener('click', e => {
  e.preventDefault();

  if (typeof isLoggedIn !== 'undefined' && !isLoggedIn) {
    document.getElementById('unauthMessage').classList.remove('hidden');
    e.target.classList.add('shake');
    setTimeout(() => e.target.classList.remove('shake'), 500);
    return;
  }

  if (isMobileDevice()) {
    // Open mobile tactical board
    if (typeof openMobileTacticalBoard === 'function') {
      openMobileTacticalBoard();
    } else {
      alert('Mobile tactical board not loaded.');
    }
  } else {
    // Open desktop tactical board
    if (typeof openTacticalBoard === 'function') {
      openTacticalBoard();
    } else {
      alert('Desktop tactical board not loaded.');
    }
  }
});
</script>
<!-- üü© Tactical Board Modal -->
<%- include('partials/_tactical-board') %>
<!-- üü© Tactical Board Mobile Modal -->
<%- include('partials/_tactical-board-mobile') %>
</body>
</html>
