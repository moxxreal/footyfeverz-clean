<header class="<%= headerClass %> <%= useTeamHeader && !user ? 'team-logged-out' : '' %>">
  <!-- Left Side -->
  <div class="header-side left">
    <% if (!user) { %>
      <% if (useTeamHeader) { %>
        <div class="auth-stack">
          <a href="#" class="header-link" onclick="openLogin()">Login</a>
          <a href="#" class="header-link" onclick="openSignup()">Sign Up</a>
        </div>
      <% } else { %>
        <a href="#" class="header-link" onclick="openLogin()">Login</a>
      <% } %>
    <% } else { %>
      <div class="user-dropdown-container" style="position: relative;">
        <span class="header-link username-toggle">
          <%= user.username %>
          <% if (user.followNotifications && user.followNotifications > 0) { %>
            <span class="notification-badge"><%= user.followNotifications %></span>
          <% } %>
        </span>
        <div class="user-dropdown hidden">
          <a href="/user/<%= user.username %>">My Profile</a>
          <a href="/logout?redirectTo=<%= request.originalUrl %>">Log out</a>
        </div>
      </div>
    <% } %>
  </div>

  <!-- Center Logo -->
  <div class="header-center">
    <a href="/" class="header-logo">
      <img src="/images/footyfeverz.png" class="header-logo-img" alt="Footy Feverz Logo">
    </a>
  </div>

  <!-- Right Side -->
<div class="header-side right">
  <% const isHome = (request.path === '/'); %>

  <% if (!user && !useTeamHeader) { %>
    <a href="#" class="header-link" onclick="openSignup()">Sign Up</a>
  <% } %>

  <% if (user) { %>
  <a href="/inbox" class="header-link inbox-link">
    Inbox
    <% const totalChat = locals.chatNotifications; %>
    <% const totalTag = user.tagNotifications || 0; %>
    <% const total = totalChat + totalTag; %>
    <% if (total > 0) { %>
      <span class="notification-badge"><%= total %></span>
    <% } %>
  </a>
<% } %>

  <% if (useTeamHeader && leagueSlug && leagueName) {
       const parts = leagueName.split(' ');
       const first = parts.shift();
       const rest  = parts.join(' ');
  %>
    <a href="/<%= leagueSlug %>.html" class="header-link league-link">
      <span class="league-line1"><%= first %></span>
      <% if (rest) { %>
        <span class="league-line2"><%= rest %></span>
      <% } %>
    </a>
  <% } %>
</div>
</header>

<!-- Updated Login Modal -->
<div id="loginModal" class="auth-modal hidden">
  <div class="auth-form-wrapper">
    <form action="/login" method="POST" class="auth-form">
      <div class="auth-header">
        <h2>Login</h2>
        <button type="button" class="close-btn" onclick="closeModals()">×</button>
      </div>

      <% if (loginError) { %>
        <p class="error-message"><%= loginError %></p>
      <% } %>

      <div class="auth-body">
        <label>
          <span>Username</span>
          <input type="text" name="username" placeholder="Your username" required>
        </label>
        <label>
          <span>Password</span>
          <input type="password" name="password" placeholder="••••••••" required>
        </label>
        <button type="submit" class="submit-btn">Log In</button>
      </div>

      <div class="auth-footer">
        <p>Don’t have an account? <span onclick="openSignup()" class="auth-link">Sign up here</span></p>
      </div>
    </form>
  </div>
</div>

<!-- Updated Signup Modal -->
<div id="signupModal" class="auth-modal hidden">
  <div class="auth-form-wrapper">
    <form action="/signup" method="POST" class="auth-form">
      <div class="auth-header">
        <h2>Sign Up</h2>
        <button type="button" class="close-btn" onclick="closeModals()">×</button>
      </div>

      <% if (signupError) { %>
        <p class="error-message"><%= signupError %></p>
      <% } %>

      <div class="auth-body">
        <label>
          <span>Username</span>
          <input type="text" name="username" placeholder="Choose a username" required>
        </label>
        <label>
  <span>Email</span>
  <input type="email" name="email" placeholder="Your email address" required>
</label>
        <label>
          <span>Password</span>
          <input type="password" name="password" placeholder="Create a password" required>
        </label>
        <label>
          <span>Confirm Password</span>
          <input type="password" name="confirmPassword" placeholder="Repeat password" required>
        </label>
        <button type="submit" class="submit-btn">Create Account</button>
      </div>

      <div class="auth-footer">
        <p>Already have an account? <span onclick="openLogin()" class="auth-link">Log in here</span></p>
      </div>
    </form>
  </div>
</div>

<style>
  /* 1. Global box-sizing so padding/borders don’t cause overflow */
  *, *::before, *::after {
    box-sizing: border-box;
  }

  /* 2. Header flex layout, no wrap, overflow visible for badges */
  header {
    position: relative;
    display: flex;
    flex-wrap: nowrap;
    justify-content: space-between;
    align-items: center;
    padding: 15px 30px;
    width: 100%;
    background: transparent;
    z-index: 10;
    overflow-x: visible;

    /* ensure header stays tall enough to match the 100px logo + padding */
    min-height: calc(100px + 2 * 15px); /* 130px */
  }

  /* 3. Allow flex items to shrink */
  .header-side,
  .header-center {
    min-width: 0;
  }

  .header-side {
    display: flex;
    align-items: center;
    gap: 25px;
  }

  /* 4. Side blocks size to their content */
  .header-side.left,
  .header-side.right {
    flex: 0 1 auto;
  }

  /* 5. Center logo is absolutely centered */
  .header-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none; /* allow clicks through wrapper */
    z-index: 1;
  }
  .header-center a {
    pointer-events: auto; /* enable clicking the logo */
  }

  /* 6. Side links always small + ellipsis */
  .header-side.left .header-link,
  .header-side.right .header-link {
    font-size: 20px;
    font-weight: 800;
    color: navy;
    text-decoration: none;
    transition: all 0.2s ease;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .header-side.left .header-link:hover,
  .header-side.right .header-link:hover {
    color: #0051a3;
    transform: scale(1.05);
  }
.auth-stack {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

  /* 7. Ensure inbox badge isn’t clipped */
  .header-side.right .header-link {
    overflow: visible;
    text-align: right;
  }

  /* 8. Logo always 100px tall */
  .header-logo-img {
    height: 100px;
    max-width: 100%;
    transition: transform 0.3s ease;
  }
  .header-logo-img:hover {
    transform: scale(1.03);
  }
  /* <-- new: nudge the absolutely-centered logo right by 8px */
  .header-center {
    left: calc(50% + 8px);
  }
  /* 9. Notification badge */
  .inbox-link {
  position: relative;      /* badge is absolutely positioned within */
  overflow: visible !important;
  margin-right: 10px;      /* nudge it left by keeping 20px from the edge */
  overflow: visible !important;
}
  .notification-badge {
  background: red;
  color: white;
  font-size: 12px;
  border-radius: 10px;
  padding: 2px 6px;
  position: absolute;
  top: -5px;
  right: -10px;
  z-index: 2;              /* make sure it floats above everything */
}

  /* 10. Two-line league name */
  .league-link .league-line1,
  .league-link .league-line2 {
    display: block;
    line-height: 1.1;
  }

  /* --- LOGIN & SIGNUP MODAL FORM --- */
/* Backdrop & modal entry */
.auth-modal {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  opacity: 0;
  animation: fadeIn 0.3s forwards;
}
@keyframes fadeIn {
  to { opacity: 1; }
}
.auth-modal.hidden { display: none !important; }

.auth-form-wrapper {
  width: 100%;
  max-width: 480px;
  margin: 0 20px;
  animation: slideDown 0.4s ease-out;
}
@keyframes slideDown {
  from { transform: translateY(-20px); opacity: 0; }
  to   { transform: translateY(0); opacity: 1; }
}

/* Form Container */
.auth-form {
  background: rgba(255, 255, 255, 0.95);
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 8px 24px rgba(0,0,0,0.2);
  font-family: 'Segoe UI', sans-serif;
}

/* Header */
.auth-header {
  background: linear-gradient(135deg, #0066cc, #003399);
  color: #fff;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.auth-header h2 {
  margin: 0;
  font-size: 1.5rem;
}
.close-btn {
  background: none;
  border: none;
  color: #fff;
  font-size: 1.5rem;
  cursor: pointer;
}

/* Body */
.auth-body {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.auth-body label {
  display: flex;
  flex-direction: column;
  font-size: 0.9rem;
  color: #333;
}
.auth-body input {
  margin-top: 0.25rem;
  padding: 0.75rem;
  border: 1px solid #ccc;
  border-radius: 6px;
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
  transition: border-color 0.2s, box-shadow 0.2s;
}
.auth-body input:focus {
  border-color: #0066cc;
  outline: none;
  box-shadow: 0 0 0 3px rgba(0,102,204,0.2);
}

.submit-btn {
  margin-top: 0.5rem;
  padding: 0.75rem;
  background: #0066cc;
  color: #fff;
  border: none;
  border-radius: 6px;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s, transform 0.1s;
}
.submit-btn:hover {
  background: #0051a3;
  transform: translateY(-1px);
}

/* Footer */
.auth-footer {
  padding: 1rem;
  background: #f7f7f7;
  text-align: center;
  font-size: 0.9rem;
}
.auth-footer .auth-link {
  color: #0066cc;
  text-decoration: underline;
  cursor: pointer;
  font-weight: 600;
}
.auth-footer .auth-link:hover {
  color: #003366;
}

/* Error message */
.error-message {
  color: #cc0000;
  padding: 0 1.5rem 1rem;
  font-size: 0.9rem;
}
/* Make the form scrollable if it’s too tall for the viewport */
.auth-form {
  max-height: 90vh;
  overflow-y: auto;
}

/* Default wrapper padding on mobile */
@media (max-width: 640px) {
  .auth-form-wrapper {
    width: 100%;
    max-width: none;
    margin: 0 10px;
  }
  .auth-form {
    border-radius: 8px;
  }
  .auth-header {
    padding: 0.75rem;
  }
  .auth-header h2 {
    font-size: 1.25rem;
  }
  .close-btn {
    font-size: 1.25rem;
  }
  .auth-body {
    padding: 1rem;
    gap: 0.75rem;
  }
  .auth-body label {
    font-size: 0.85rem;
  }
  .auth-body input {
    padding: 0.6rem;
    font-size: 0.9rem;
  }
  .submit-btn {
    padding: 0.6rem;
    font-size: 0.95rem;
  }
  .auth-footer {
    padding: 0.75rem;
    font-size: 0.85rem;
  }
}

/* Ultra-small screens (e.g. very narrow phones) */
@media (max-width: 360px) {
  .auth-header h2 {
    font-size: 1.1rem;
  }
  .auth-body input,
  .submit-btn {
    font-size: 0.85rem;
  }
}
</style>

<script>
  function openLogin() {
    closeModals();
    document.getElementById('loginModal')?.classList.remove('hidden');
  }

  function openSignup() {
    closeModals();
    document.getElementById('signupModal')?.classList.remove('hidden');
  }

  function closeModals() {
    document.getElementById('loginModal')?.classList.add('hidden');
    document.getElementById('signupModal')?.classList.add('hidden');
  }

  document.addEventListener('keydown', function (e) {
    if (e.key === 'Escape') closeModals();
  });

  document.addEventListener('click', function (e) {
    if (e.target.id === 'loginModal' || e.target.id === 'signupModal') {
      closeModals();
    }
  });

  const toggleBtn = document.querySelector('.username-toggle');
  const dropdown = document.querySelector('.user-dropdown');

  if (toggleBtn && dropdown) {
    toggleBtn.addEventListener('click', () => {
      dropdown.classList.toggle('hidden');
    });

    document.addEventListener('click', (e) => {
      if (!e.target.closest('.user-dropdown-container')) {
        dropdown.classList.add('hidden');
      }
    });
  }
</script>
